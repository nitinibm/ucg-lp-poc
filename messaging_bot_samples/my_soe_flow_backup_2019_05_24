[{"id":"7c45e147.0538e","type":"tab","label":"GoogleAssistant","disabled":false,"info":""},{"id":"2bbe4d2.bbbdab2","type":"tab","label":"GoogleDialogFlow","disabled":false,"info":""},{"id":"1b3c25ef.d67532","type":"tab","label":"LP","disabled":false,"info":""},{"id":"5da9e9e8.f03828","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"66a44aa8.3d97f4","type":"tab","label":"Flow 2","disabled":false,"info":""},{"id":"670b7540.c94404","type":"subflow","name":"Get Redis Session","info":"","in":[{"x":33.48760986328125,"y":71.6234130859375,"wires":[{"id":"17de31a9.cdc306"}]}],"out":[{"x":789.051643371582,"y":74.23785018920898,"wires":[{"id":"351b70a7.f98e38","port":0}]}]},{"id":"62b32cde.690244","type":"subflow","name":"Override Workspace","info":"","in":[{"x":60,"y":60,"wires":[{"id":"223b81eb.032076"}]}],"out":[{"x":340,"y":60,"wires":[{"id":"223b81eb.032076","port":0}]}]},{"id":"65b33d3c.719994","type":"function","z":"2bbe4d2.bbbdab2","name":"Google flow","func":"const dialogflow = context.global.dialogflow;\n\nconst uuid = context.global.google_uuid;\n\n/**\n * Send a query to the dialogflow agent, and return the query result.\n * @param {string} projectId The project to be used\n */\n console.log(\"nak\");\nasync function runSample(projectId = 'nak-room-rservation') {\n//function runSample(projectId = 'nak-room-rservation') {    \n  // A unique identifier for the given session\n  const sessionId = uuid.v4();\n \n  // Create a new session\n  const sessionClient = new dialogflow.SessionsClient();\n  const sessionPath = sessionClient.sessionPath(projectId, sessionId);\n \n  // The text query request.\n  const request = {\n    session: sessionPath,\n    queryInput: {\n      text: {\n        // The query to send to the dialogflow agent\n        text: 'hello',\n        // The language used by the client (en-US)\n        languageCode: 'en-US',\n      },\n    },\n  };\n \n  // Send request and log result\n  runSample();\n  //const responses = await sessionClient.detectIntent(request);\n    const responses = sessionClient.detectIntent(request);\n  msg.payload = responses;\n  node.send(msg);\n  console.log('Detected intent');\n  const result = responses[0].queryResult;\n  console.log(`  Query: ${result.queryText}`);\n  console.log(`  Response: ${result.fulfillmentText}`);\n  if (result.intent) {\n    console.log(`  Intent: ${result.intent.displayName}`);\n  } else {\n    console.log(`  No intent matched.`);\n  }\n}\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":60,"wires":[["97bd0f.b97912f"]]},{"id":"97bd0f.b97912f","type":"debug","z":"2bbe4d2.bbbdab2","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":630,"y":60,"wires":[]},{"id":"5d342c2.ea0d7d4","type":"inject","z":"2bbe4d2.bbbdab2","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":170,"y":60,"wires":[["65b33d3c.719994"]]},{"id":"927b0224.950eb","type":"function","z":"2bbe4d2.bbbdab2","name":"google-pepare-request","func":"msg.headers={\"Content-Type\":\"application/json\",\n             \"Accept\" : \"application/json\",\n             \"Authorization\" : \"Bearer 50010e3f903d4351a3dc67259676ac25\"\n    \n};\nmsg.url = \"https://api.dialogflow.com/v1/query?v=20150910\";\nmsg.method = \"POST\";\nmsg.payload = {\n    \"contexts\": [\n      \"shop\"\n    ],\n    \"lang\": \"en\",\n    \"query\": \"Hello\",\n    \"sessionId\": \"12345\",\n    \"timezone\": \"America/New_York\"\n};\nreturn msg;","outputs":1,"noerr":0,"x":380,"y":140,"wires":[["9389648c.bacfe8"]]},{"id":"9389648c.bacfe8","type":"http request","z":"2bbe4d2.bbbdab2","name":"","method":"use","ret":"obj","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":600,"y":140,"wires":[["57a11471.6b509c"]]},{"id":"fc493ffb.7a69d","type":"inject","z":"2bbe4d2.bbbdab2","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":170,"y":140,"wires":[["927b0224.950eb"]]},{"id":"57a11471.6b509c","type":"debug","z":"2bbe4d2.bbbdab2","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":780,"y":140,"wires":[]},{"id":"3ebba72b.68f6d8","type":"debug","z":"2bbe4d2.bbbdab2","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":660,"y":460,"wires":[]},{"id":"2af16488.acd54c","type":"http request","z":"2bbe4d2.bbbdab2","name":"","method":"use","ret":"obj","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":500,"y":440,"wires":[["3ebba72b.68f6d8","f4f467a2.62cea8"]]},{"id":"c7b3ffa8.2ab84","type":"function","z":"2bbe4d2.bbbdab2","name":"google-pepare-request-pizza-order","func":"msg.headers={\"Content-Type\":\"application/json\",\n             \"Accept\" : \"application/json\",\n             //\"Authorization\" : \"Bearer 664490cadaf74ecaae0c6c02399e68cb\"\n             \"Authorization\" : \"Bearer 39911804021741f08646a1b90bd2afaf\"\n    \n};\nmsg.url = \"https://api.dialogflow.com/v1/query?v=20150910\";\nmsg.method = \"POST\";\nnode.warn(\"user utterance : \" + msg.payload);\nvar m_query = msg.payload;\nmsg.payload = {\n    \"contexts\": [\n      \"shop\"\n    ],\n    \"lang\": \"en\",\n    \"query\": m_query,\n   \"sessionId\": '12345678-a-002',\n    \"timezone\": \"America/New_York\"\n};\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":620,"wires":[["2af16488.acd54c"]]},{"id":"65912b12.41fc14","type":"inject","z":"2bbe4d2.bbbdab2","name":"Hello","topic":"","payload":"Hello","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":100,"y":420,"wires":[["c7b3ffa8.2ab84"]]},{"id":"404ebfc5.98263","type":"inject","z":"2bbe4d2.bbbdab2","name":"Check for pizza","topic":"","payload":"Can I have pizza please","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":130,"y":460,"wires":[["c7b3ffa8.2ab84"]]},{"id":"f4f467a2.62cea8","type":"function","z":"2bbe4d2.bbbdab2","name":"display response","func":"node.error(\"BOT response : \" + msg.payload.result.fulfillment.speech);\nreturn msg;","outputs":0,"noerr":0,"x":700,"y":380,"wires":[]},{"id":"eaba54bc.16f318","type":"inject","z":"2bbe4d2.bbbdab2","name":"pizza pickup Time","topic":"","payload":"4:30","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":500,"wires":[["c7b3ffa8.2ab84"]]},{"id":"b1a74160.21537","type":"inject","z":"2bbe4d2.bbbdab2","name":"pizza pickup Date","topic":"","payload":"2019-04-15","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":540,"wires":[["c7b3ffa8.2ab84"]]},{"id":"b9c4abc5.f96258","type":"inject","z":"2bbe4d2.bbbdab2","name":"Toppings","topic":"","payload":"Chicken, Cheese","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":580,"wires":[["c7b3ffa8.2ab84"]]},{"id":"266d745c.f6c83c","type":"inject","z":"2bbe4d2.bbbdab2","name":"Order size","topic":"","payload":"large","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":620,"wires":[["c7b3ffa8.2ab84"]]},{"id":"c90ce6ad.81e0e8","type":"inject","z":"2bbe4d2.bbbdab2","name":"side order for drink - yes","topic":"","payload":"sure","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":660,"wires":[["c7b3ffa8.2ab84"]]},{"id":"58abc970.3bac68","type":"inject","z":"2bbe4d2.bbbdab2","name":"side order for drink - No","topic":"","payload":"No","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":700,"wires":[["c7b3ffa8.2ab84"]]},{"id":"16e7850f.6adc8b","type":"inject","z":"2bbe4d2.bbbdab2","name":"","topic":"","payload":"Thank you","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":740,"wires":[["c7b3ffa8.2ab84"]]},{"id":"e6090550.a4d318","type":"debug","z":"2bbe4d2.bbbdab2","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":660,"y":920,"wires":[]},{"id":"bedc509c.a674c","type":"http request","z":"2bbe4d2.bbbdab2","name":"","method":"use","ret":"obj","paytoqs":false,"url":"","tls":"","proxy":"","x":500,"y":920,"wires":[["e6090550.a4d318"]]},{"id":"e62b177e.16b2c8","type":"function","z":"2bbe4d2.bbbdab2","name":"google-get-list-of-APIs","func":"msg.headers={\"Content-Type\":\"application/json\",\n             \"Accept\" : \"application/json\",\n             \"Authorization\" : \"Bearer 39911804021741f08646a1b90bd2afaf\"\n    \n};\n//msg.url = \"https://api.dialogflow.com/v1/query?v=20150910\";\n//msg.url = \"https://dialogflow.googleapis.com/v2/projects/nak-pizza-order/agent/intents\"\n\nm_base_url =\"https://www.googleapis.com/discovery/v1/\";\nmsg.url = m_base_url +\"apis\";\n//msg.url = m_base_url + \"api/v1/rest\";\n\nmsg.method = \"GET\";\n\n/* node.warn(\"user utterance : \" + msg.payload);\nvar m_query = msg.payload;\nmsg.payload = {\n    \"contexts\": [\n      \"shop\"\n    ],\n    \"lang\": \"en\",\n    \"query\": m_query,\n    \"sessionId\": \"12345\",\n    \"timezone\": \"America/New_York\"\n};\n*/\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":920,"wires":[["bedc509c.a674c"]]},{"id":"b66ca7dd.812c48","type":"inject","z":"2bbe4d2.bbbdab2","name":"Inject","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":120,"y":920,"wires":[["e62b177e.16b2c8"]]},{"id":"ec194578.d1a258","type":"inject","z":"2bbe4d2.bbbdab2","name":"Inject","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":120,"y":1000,"wires":[["86e79fb9.9db89"]]},{"id":"86e79fb9.9db89","type":"function","z":"2bbe4d2.bbbdab2","name":"google-get-api-documenation","func":"msg.headers={\"Content-Type\":\"application/json\",\n             \"Accept\" : \"application/json\",\n             \"Authorization\" : \"Bearer 39911804021741f08646a1b90bd2afaf\"\n    \n};\n\n//m_base_url =\"https://www.googleapis.com/discovery/v1/\";\n//msg.url = m_base_url +\"apis\";\nmsg.url = \"https://abusiveexperiencereport.googleapis.com/$discovery/rest?version=v1\";\n\n \n//msg.url = m_base_url + \"api/v1/rest\";\n\nmsg.method = \"GET\";\n\n/* node.warn(\"user utterance : \" + msg.payload);\nvar m_query = msg.payload;\nmsg.payload = {\n    \"contexts\": [\n      \"shop\"\n    ],\n    \"lang\": \"en\",\n    \"query\": m_query,\n    \"sessionId\": \"12345\",\n    \"timezone\": \"America/New_York\"\n};\n*/\nreturn msg;","outputs":1,"noerr":0,"x":320,"y":1000,"wires":[["51963677.801d98"]]},{"id":"51963677.801d98","type":"http request","z":"2bbe4d2.bbbdab2","name":"","method":"use","ret":"obj","url":"","tls":"","x":560,"y":1000,"wires":[["15f51585.f3baaa"]]},{"id":"15f51585.f3baaa","type":"debug","z":"2bbe4d2.bbbdab2","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":700,"y":1000,"wires":[]},{"id":"1ce95cb1.f7d183","type":"debug","z":"2bbe4d2.bbbdab2","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":620,"y":220,"wires":[]},{"id":"f49ac3fb.1881c","type":"function","z":"2bbe4d2.bbbdab2","name":"Google flow - SDK","func":"const g_apiai = context.global.apiai;\n\nvar app = g_apiai(\"39911804021741f08646a1b90bd2afaf\");\n\nvar options = {\n    sessionId: '12345678-a-007',\n    contexts: [\n        {\n            name: 'order_pizza_dialog_context',\n            parameters: {\n                'pizza_topping' : 'onions',\n                'size' : 'large',\n                'time' : '9:30'\n            }\n        }\n]\n};\n\n\n//var request = app.textRequest('Hello', {\n//    sessionId: '1234567'\n//});\n\nvar user_utterance = msg.payload;\n\nvar request = app.textRequest(user_utterance, options);\n\nrequest.on('response', function(response) {\n    \n    msg.payload = response;\n    //node.warn(msg);\n    node.send(msg);\n});\n\nrequest.on('error', function(error) {\n   // msg.payload = error;\n    node.error(msg);\n});\n\nrequest.end();\n\n\n//return msg;","outputs":1,"noerr":0,"x":420,"y":220,"wires":[["1ce95cb1.f7d183"]]},{"id":"31eeb3b4.08c33c","type":"inject","z":"2bbe4d2.bbbdab2","name":"Hello","topic":"","payload":"Hello","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":220,"wires":[["f49ac3fb.1881c"]]},{"id":"1434ada3.6d4a02","type":"inject","z":"2bbe4d2.bbbdab2","name":"Pizza Order","topic":"","payload":"Can i have pizza for today please","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":280,"wires":[["65a34081.8cf5b"]]},{"id":"65a34081.8cf5b","type":"function","z":"2bbe4d2.bbbdab2","name":"Google flow - SDK","func":"const g_apiai = context.global.apiai;\n\nvar app = g_apiai(\"39911804021741f08646a1b90bd2afaf\");\n\nvar options = {\n    sessionId: '12345678-a-007',    \n    contexts: [\n        {\n            \"lifespanCount\":1,\n            \"name\": 'gf-action',\n            \"parameters\" : {\n                \"cust-data-retrived\": \"Yes\"\n            }\n        }\n] \n};\n\nconst gfd_request = {\n//    session: sessionPath,\n    queryInput: {\n      text: {\n        // The query to send to the dialogflow agent\n        text: 'hello',\n        // The language used by the client (en-US)\n        languageCode: 'en-US',\n      },\n    },\n  };\n  \n//var request = app.textRequest('Hello', {\n//    sessionId: '1234567'\n//});\n\nvar user_utterance = msg.payload;\n\nvar request = app.textRequest(user_utterance, options);\n\nrequest.on('response', function(response) {\n    \n    msg.payload = response;\n    //node.warn(msg);\n    node.send(msg);\n});\n\nrequest.on('error', function(error) {\n   // msg.payload = error;\n    node.error(msg);\n});\n\nrequest.end();\n\n\n//return msg;","outputs":1,"noerr":0,"x":420,"y":280,"wires":[["1ce95cb1.f7d183"]]},{"id":"fd4f9682.9e6178","type":"debug","z":"5da9e9e8.f03828","name":"webhook-msg","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":480,"y":200,"wires":[]},{"id":"f5808d7c.6fa32","type":"http in","z":"5da9e9e8.f03828","name":"","url":"/gfdwebhook","method":"post","upload":false,"swaggerDoc":"","x":190,"y":200,"wires":[["fd4f9682.9e6178"]]},{"id":"952f7c9e.a1297","type":"http response","z":"2bbe4d2.bbbdab2","name":"","statusCode":"200","headers":{},"x":350,"y":1160,"wires":[]},{"id":"f30e7a29.92b7c8","type":"debug","z":"7c45e147.0538e","name":"GFD-Response","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":680,"y":240,"wires":[]},{"id":"fcc4bd8a.9a53","type":"function","z":"7c45e147.0538e","name":"http response","func":"function convert_array_to_json(in_array) {\n    var out_array_json = [{}];\n    for (i=0;i< in_array.length;i++) {\n        out_array_json[i] = {\"title\" : in_array[i]};\n    }\n    //node.error(out_array_json);\n    return (out_array_json);\n}\nmsg.save_gf_response = msg.payload;\n//msg.req = msg.save_msg.req; \n//msg.res = msg.save_msg.res;\n//node.error(msg);\n\nvar m_response = \"\"; \n\nvar obj_response = msg.payload.result.fulfillment.speech.split(\"|\");\n\n//node.error(obj_response);\n\nm_response = obj_response[obj_response.length-1];\n//node.error(m_response);\n\nvar obj_options = [{}];\nvar suggestions_obj = {};\n\nif (obj_response.length === 2) {\n    var m_var_name = \"msg.payload.result.parameters.\"+obj_response[0];\n//    node.error(\"Tracel-3\");\n    node.error(eval(m_var_name).split(\"|\"));\n    if (typeof eval(m_var_name) !== 'undefined') {\n        suggestions_obj = convert_array_to_json (eval(m_var_name).split(\"|\"));\n//        node.error(suggestions_obj);\n    }    \n}\n\nvar topping_options = [{}];\nif (typeof msg.payload.result.parameters.options_topping !== 'undefined') {\n    var topping_array = msg.payload.result.parameters.options_topping.split(\"|\");\n    node.error(topping_array);\n    topping_options = convert_array_to_json(topping_array);\n}\n\nm_token = \"Bearer \" + msg.req.headers.authorization;\n\nmsg.headers = {\n    'authorization': m_token,\n    //'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImFwcF81OTZmYmZmNjZjOGZjYjQ1MDBhYmMwZjUifQ.eyJzY29wZSI6ImFwcCJ9.X6jgajAzjrVv2dmVARDV-w9iy2mZMC_AW1XuckScD-g',\n    'content-type': 'application/json'\n};\nvar response_type = \"simpleResponse\";\n\nif (typeof msg.payload.result.parameters !== 'undefined') {\n    if (typeof msg.payload.result.parameters.post_response_action !== 'undefined') {\n        if (msg.payload.result.parameters.post_response_action === 'welcome') {\n            response_type = 'basicCard';\n        }\n        if (msg.payload.result.parameters.post_response_action === 'close-conversation') {\n            response_type = 'finalResponse';\n        }\n         if (msg.payload.result.parameters.post_response_action === 'show-options') {\n             response_type = 'suggestionChips';\n             /*\n             var cap_response = m_response.toUpperCase();\n             if (cap_response.includes(\"TOPPING\")) {\n                 response_type = 'suggestionChips';\n                 suggestions_obj = [ {\"title\": \"Chicken\"},{\"title\": \"Vegetarian\"},\n                                     {\"title\": \"peppers\"},{\"title\": \"cheese\"}\n                                   ];\n             }\n             if (cap_response.includes(\"SIZE\")) {\n                 response_type = 'suggestionChips';\n                 suggestions_obj = [ {\"title\": \"Small\"},{\"title\": \"Medium\"},\n                                     {\"title\": \"Large\"}\n                                   ];\n             }   \n             if (cap_response.includes(\"DRINK\")) {\n                 response_type = 'suggestionChips';\n                 suggestions_obj = [ {\"title\": \"Yes\"},{\"title\": \"No\"}\n                                   ];\n             }    \n             */\n\n        }\n    }\n}\n//response_type = \"finalResponse\";\nmsg.payload = {};\nswitch (response_type) {\n    case \"basicCard\":\n        msg.payload = {\n            \"expectUserResponse\": true,\n            \"expectedInputs\": [{\n                \"possibleIntents\": [{\n                    \"intent\": \"actions.intent.TEXT\"\n                }],\n                \"inputPrompt\": {\n                    \"richInitialPrompt\": {\n                        \"items\": [{\n                                \"simpleResponse\": {\n                                    \"textToSpeech\":  m_response\n                                }\n                            },\n                            {\n                                \"basicCard\": {\n                                    \"title\": \"UCG Google Assistant Integration\",\n                                    \"subtitle\": \"Welcome to the UCG-Google Assistant connector - This is Pizza Ordering test example\",\n                                    \"formattedText\": \"You can order *Awesome* __Pizza__   (🍕) here with various ***toppings***. Recommend to try our ___Veggie___ ***Pizza***. \\n **by UCG Team**\",\n                                    \"image\": {\n                                        \"url\": \"https://github.com/nitin20212/nak-ucg/blob/master/IBM-ucg-google-integration/IBM-UCG-Logo.png\",\n                                        \"accessibilityText\": \"Image alternate text\"\n                                    },\n                                    \"buttons\": [{\n                                        \"title\": \"Pizza for Dinner\",\n                                       // \"openUrlAction\": {\n                                       //        \"url\": \"https://assistant.google.com/\"\n                                      //    }\n                                    }],\n                                    \"imageDisplayOptions\": \"CROPPED\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            }]\n\n        }\n        break;\n    case \"suggestionChips\":\n        msg.payload = {\n              \"expectUserResponse\": true,\n  \"expectedInputs\": [\n    {\n      \"possibleIntents\": [\n        {\n          \"intent\": \"actions.intent.TEXT\"\n        }\n      ],\n      \"inputPrompt\": {\n        \"richInitialPrompt\": {\n          \"items\": [\n            {\n              \"simpleResponse\": {\n                \"textToSpeech\": m_response // \"These are suggestion chips.\"\n              }\n            }\n          ],\n          \"suggestions\" : suggestions_obj,\n          \"linkOutSuggestion\": { \n            //\"destinationName\": \"Suggestion Link\",\n            //\"url\": \"https://assistant.google.com/\"\n          }\n        }\n      }\n    }\n  ]\n\n        }        \n        break;\n    case \"finalResponse\":    \n       msg.payload = {\n         \"expectUserResponse\": false,\n         \"finalResponse\": {\n            \"richResponse\": {\n               \"items\": [\n                    {\n                       \"simpleResponse\": {\n                       \"textToSpeech\": m_response //\"Good bye\"\n                       }\n                   }\n               ]\n           }\n        }\n       } \n       break;\n    default:  //: \"simpleResponse\":\n        msg.payload = {\n            \"expectUserResponse\": true,\n            \"expectedInputs\": [{\n                \"possibleIntents\": [{\n                    \"intent\": \"actions.intent.TEXT\"\n                }],\n                \"inputPrompt\": {\n                    \"richInitialPrompt\": {\n                        \"items\": [{\n                            \"simpleResponse\": {\n                                \"textToSpeech\": m_response,\n                                \"displayText\": m_response\n                            }\n                        }]\n                    }\n                }\n            }]\n        }\n        break;\n        \n\n}\n\n/**\nif (response_type !== \"richInitialPrompt\") {\nmsg.payload = \n{\n  \"expectUserResponse\": true,\n  \"expectedInputs\": [\n    {\n      \"possibleIntents\": [\n        {\n          \"intent\": \"actions.intent.TEXT\"\n        }\n      ],\n      \"inputPrompt\": {\n      \"richInitialPrompt\": {\n          \"items\": [\n            {\n              \"simpleResponse\": {\n                \"textToSpeech\": m_response,\n                \"displayText\": m_response\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n}\nelse {\n  msg.payload = \n{\n  \"expectUserResponse\": false,\n  \"expectedInputs\": [\n    {\n      \"possibleIntents\": [\n        {\n          \"intent\": \"actions.intent.TEXT\"\n        }\n      ],\n      \"inputPrompt\": {\n      \"richInitialPrompt\": {\n          \"items\": [\n            {\n              \"finalResponse\": {\n                \"textToSpeech\": m_response,\n                \"displayText\": m_response\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n}\n**/\n//node.error(msg);\n\nreturn msg;","outputs":1,"noerr":0,"x":480,"y":340,"wires":[["f30e7a29.92b7c8","addfe294.55cd7"]]},{"id":"1b1afa5b.a2fdf6","type":"http in","z":"7c45e147.0538e","name":"NAKUCG","url":"/nakucg","method":"post","upload":false,"swaggerDoc":"","x":100,"y":100,"wires":[["d94484df.2a4a28","47991679.ab3258"]]},{"id":"addfe294.55cd7","type":"http response","z":"7c45e147.0538e","name":"","statusCode":"","headers":{},"x":670,"y":360,"wires":[]},{"id":"d94484df.2a4a28","type":"debug","z":"7c45e147.0538e","name":"Channel Input","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":380,"y":100,"wires":[]},{"id":"79ca9c04.d03554","type":"function","z":"7c45e147.0538e","name":"Google flow - SDK","func":"node.error(msg);\nconst g_apiai = context.global.apiai;\n\n//msg.sessionId = \"ABwppHGnS6EpRmUchX14N9iq433VhdhpIbu7wlBVxULgvkbEazRzfiXvYFtMMTb7izpYPogn_yW3xkB_k2dctFmw\";\n//msg.user_utterance = \"Hello\";\n\nvar app = g_apiai(\"39911804021741f08646a1b90bd2afaf\");    // Pizza Order\n//var app = g_apiai(\"664490cadaf74ecaae0c6c02399e68cb\");  // Insurance Agent\n\nvar options = {\n    sessionId: \"nak\"+msg.sessionId //,\n    /*contexts: [{}]\n    \n        {\n            name: 'order_pizza_dialog_context',\n            parameters: {\n                'pizza_topping' : 'onions',\n                'size' : 'large',\n                'time' : '9:30'\n            }\n        } \n] */\n};\n\n\n//var request = app.textRequest('Hello', {\n//    sessionId: '1234567'\n//});\n\nvar user_utterance = msg.user_utterance;\n\nvar request = app.textRequest(user_utterance, options);\n\nrequest.on('response', function(response) {\n    \n    msg.payload = response;\n    //node.warn(msg);\n    node.send(msg);\n});\n\nrequest.on('error', function(error) {\n   // msg.payload = error;\n    node.error(msg);\n});\n\nrequest.end();\n\n\n//return msg;","outputs":1,"noerr":0,"x":210,"y":280,"wires":[["2c96f80c.f261b8","fcc4bd8a.9a53"]]},{"id":"47991679.ab3258","type":"function","z":"7c45e147.0538e","name":"Save MSG","func":"//msg.save_msg = {};\n//msg.save_msg.req = msg.req;\n//msg.save_msg.res = msg.res;\n//delete msg.req;\n//delete msg.res;\n\n\nvar str = msg.payload.inputs[0].rawInputs[0].query;\nvar str_up = str.toUpperCase();\n\nvar str_found = str_up.match(/IBM UCG/g);\nmsg.user_utterance = str;\n\nif (str_up.match(/IBM UCG/g) ) {\n    msg.user_utterance = \"Hello\";\n}\nif (str_up.match(/TEST UCG/g) ) {\n    msg.user_utterance = \"Hello\";\n}\nmsg.sessionId = msg.payload.conversation.conversationId;\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":180,"wires":[["79ca9c04.d03554"]]},{"id":"2c96f80c.f261b8","type":"debug","z":"7c45e147.0538e","name":"gfd_out","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":420,"y":240,"wires":[]},{"id":"8a83a97e.f34358","type":"inject","z":"5da9e9e8.f03828","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":180,"y":360,"wires":[["7ed8ee52.611a6"]]},{"id":"7ed8ee52.611a6","type":"function","z":"5da9e9e8.f03828","name":"convo response","func":"const {\n  actionssdk,\n  Image,\n} = context.global.actions_on_google;\n\nconst app = actionssdk()\n\napp.intent('actions.intent.MAIN', conv => {\n\n  conv.ask('Hi, how is it going?')\n\n//  conv.ask(`Here's a picture of a cat`)\n//  conv.ask(new Image({\n//    url: 'https://developers.google.com/web/fundamentals/accessibility/semantics-builtin/imgs/160204193356-01-cat-500.jpg',\n//    alt: 'A cat',\n//  }))\n\n})\n\napp.intent('actions.intent.TEXT', (conv, input) => {\n  if (input === 'bye' || input === 'goodbye') {\n    return conv.close('See you later!')\n  }\n  conv.ask(`I didn't understand. Can you tell me something else?`)\n})\n\n//const conv = actionssdk({debug: true});\n\n//app.intent('actions.intent.MAIN', (conv) => {\n//..  conv.ask('Hi!');\n//});\n\n/**\nconv.ask({\n  speech: 'Howdy, this is GeekNum. I can tell you fun facts about almost any number, my favorite is 42. What number do you have in mind?',\n  text: 'Howdy! I can tell you fun facts about almost any number. What do you have in mind?',\n});\n\n/**\nmsg.payload = \n{\n  \"expectUserResponse\": true,\n  \"expectedInputs\": [\n    {\n      \"possibleIntents\": [\n        {\n          \"intent\": \"actions.intent.TEXT\"\n        }\n      ],\n      \"inputPrompt\": {\n        \"richInitialPrompt\": {\n          \"items\": [\n            {\n              \"simpleResponse\": {\n                \"textToSpeech\": \"Howdy, this is GeekNum. I can tell you fun facts about almost any number, my favorite is 42. What number do you have in mind?\",\n                \"displayText\": \"Howdy! I can tell you fun facts about almost any number. What do you have in mind?\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n*/\n//return msg;","outputs":1,"noerr":0,"x":400,"y":360,"wires":[[]]},{"id":"3b403d9e.fac0c2","type":"http request","z":"5da9e9e8.f03828","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":610,"y":360,"wires":[["25b5ccc1.34c5c4"]]},{"id":"25b5ccc1.34c5c4","type":"debug","z":"5da9e9e8.f03828","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":770,"y":360,"wires":[]},{"id":"a951a2b6.d2708","type":"debug","z":"2bbe4d2.bbbdab2","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":690,"y":1080,"wires":[]},{"id":"45d20822.84a318","type":"http request","z":"2bbe4d2.bbbdab2","name":"","method":"use","ret":"obj","paytoqs":false,"url":"","tls":"","proxy":"","x":490,"y":1080,"wires":[["a951a2b6.d2708"]]},{"id":"2a50f78e.7c0598","type":"function","z":"2bbe4d2.bbbdab2","name":"google-driver-api","func":"msg.headers={\"Content-Type\":\"application/json\",\n             \"Accept\" : \"application/json\",\n             \"Authorization\" : \"Bearer ya29.Glv8BjAUV7qfL8RbnJQ_swm4vcwrPUKBHhLOJXUlJsUWJsNQKUMhBEbcLj8AHRhKfvWI39bN7gU3QLJgAuBGxAw0gyOAZZapV5mB0s0Fq-H1UNBv8eCP5RPkMbuT\"\n    \n};\n\n//m_base_url =\"https://www.googleapis.com/discovery/v1/\";\n//msg.url = m_base_url +\"apis\";\nmsg.url = \"https://www.googleapis.com/auth/drive\";\n\n\n \n//msg.url = m_base_url + \"api/v1/rest\";\n\nmsg.method = \"GET\";\n\n/* node.warn(\"user utterance : \" + msg.payload);\nvar m_query = msg.payload;\nmsg.payload = {\n    \"contexts\": [\n      \"shop\"\n    ],\n    \"lang\": \"en\",\n    \"query\": m_query,\n    \"sessionId\": \"12345\",\n    \"timezone\": \"America/New_York\"\n};\n*/\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":1080,"wires":[["45d20822.84a318"]]},{"id":"3a13deab.e819b2","type":"inject","z":"2bbe4d2.bbbdab2","name":"Inject","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":1080,"wires":[["2a50f78e.7c0598"]]},{"id":"ff06979e.315e88","type":"debug","z":"5da9e9e8.f03828","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":710,"y":560,"wires":[]},{"id":"e8c3543a.cd2d88","type":"http request","z":"5da9e9e8.f03828","name":"","method":"use","ret":"obj","paytoqs":false,"url":"","tls":"","proxy":"","x":550,"y":560,"wires":[["ff06979e.315e88"]]},{"id":"9287b70a.f27728","type":"function","z":"5da9e9e8.f03828","name":"my-local-url","func":"msg.headers={\"Content-Type\":\"application/json\",\n             \"Accept\" : \"application/json\"\n\n};\n//msg.url = \"https://api.dialogflow.com/v1/query?v=20150910\";\n//msg.url = \"https://dialogflow.googleapis.com/v2/projects/nak-pizza-order/agent/intents\"\n\nmsg.url =\"http://localhost:8090/users/create_new_User\";\n\nmsg.method = \"POST\";\n\nmsg.payload = {\n\"firstname\" : \"Nitin\",\n\"lastname\" : \"Kulkarni\",\n\"email\": \"nitintest@email.com\",\n\"password\" : \"test123\"\n};\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":560,"wires":[["e8c3543a.cd2d88"]]},{"id":"4f04226b.32f48c","type":"inject","z":"5da9e9e8.f03828","name":"Inject","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":170,"y":560,"wires":[["9287b70a.f27728"]]},{"id":"6653ff24.534a","type":"http response","z":"66a44aa8.3d97f4","name":"","statusCode":"","headers":{},"x":730,"y":420,"wires":[]},{"id":"590a62b4.a2a43c","type":"function","z":"66a44aa8.3d97f4","name":"http response","func":"function convert_array_to_json(in_array) {\n    var out_array_json = [{}];\n    for (i=0;i< in_array.length;i++) {\n        out_array_json[i] = {\"title\" : in_array[i]};\n    }\n    //node.error(out_array_json);\n    return (out_array_json);\n}\nmsg.save_gf_response = msg.payload;\n//msg.req = msg.save_msg.req; \n//msg.res = msg.save_msg.res;\n//node.error(msg);\n\nvar m_response = \"\"; \n\nvar obj_response = msg.payload.result.fulfillment.speech.split(\"|\");\n\nnode.error(obj_response);\n\nm_response = obj_response[obj_response.length-1];\n//node.error(m_response);\n\nvar obj_options = [{}];\nvar suggestions_obj = {};\n\nif (obj_response.length === 2) {\n    var m_var_name = \"msg.payload.result.parameters.\"+obj_response[0];\n//    node.error(\"Tracel-3\");\n    node.error(eval(m_var_name).split(\"|\"));\n    if (typeof eval(m_var_name) !== 'undefined') {\n        suggestions_obj = convert_array_to_json (eval(m_var_name).split(\"|\"));\n//        node.error(suggestions_obj);\n    }    \n}\n\nvar topping_options = [{}];\nif (typeof msg.payload.result.parameters.options_topping !== 'undefined') {\n    var topping_array = msg.payload.result.parameters.options_topping.split(\"|\");\n    node.error(topping_array);\n    topping_options = convert_array_to_json(topping_array);\n}\n\nm_token = \"Bearer \" + msg.req.headers.authorization;\n\nmsg.headers = {\n    'authorization': m_token,\n    //'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImFwcF81OTZmYmZmNjZjOGZjYjQ1MDBhYmMwZjUifQ.eyJzY29wZSI6ImFwcCJ9.X6jgajAzjrVv2dmVARDV-w9iy2mZMC_AW1XuckScD-g',\n    'content-type': 'application/json'\n};\nvar response_type = \"simpleResponse\";\n\nif (typeof msg.payload.result.parameters !== 'undefined') {\n    if (typeof msg.payload.result.parameters.post_response_action !== 'undefined') {\n        if (msg.payload.result.parameters.post_response_action === 'welcome') {\n            response_type = 'basicCard';\n        }\n        if (msg.payload.result.parameters.post_response_action === 'close-conversation') {\n            response_type = 'finalResponse';\n        }\n         if (msg.payload.result.parameters.post_response_action === 'show-options') {\n             response_type = 'suggestionChips';\n             /*\n             var cap_response = m_response.toUpperCase();\n             if (cap_response.includes(\"TOPPING\")) {\n                 response_type = 'suggestionChips';\n                 suggestions_obj = [ {\"title\": \"Chicken\"},{\"title\": \"Vegetarian\"},\n                                     {\"title\": \"peppers\"},{\"title\": \"cheese\"}\n                                   ];\n             }\n             if (cap_response.includes(\"SIZE\")) {\n                 response_type = 'suggestionChips';\n                 suggestions_obj = [ {\"title\": \"Small\"},{\"title\": \"Medium\"},\n                                     {\"title\": \"Large\"}\n                                   ];\n             }   \n             if (cap_response.includes(\"DRINK\")) {\n                 response_type = 'suggestionChips';\n                 suggestions_obj = [ {\"title\": \"Yes\"},{\"title\": \"No\"}\n                                   ];\n             }    \n             */\n\n        }\n    }\n}\n//response_type = \"finalResponse\";\nmsg.payload = {};\nswitch (response_type) {\n    case \"basicCard\":\n        msg.payload = {\n            \"expectUserResponse\": true,\n            \"expectedInputs\": [{\n                \"possibleIntents\": [{\n                    \"intent\": \"actions.intent.TEXT\"\n                }],\n                \"inputPrompt\": {\n                    \"richInitialPrompt\": {\n                        \"items\": [{\n                                \"simpleResponse\": {\n                                    \"textToSpeech\":  m_response\n                                }\n                            },\n                            {\n                                \"basicCard\": {\n                                    \"title\": \"UCG Google Assistant Integration\",\n                                    \"subtitle\": \"Welcome to the UCG-Google Assistant connector - This is Pizza Ordering test example\",\n                                    \"formattedText\": \"You can order *Awesome* __Pizza__   (🍕) here with various ***toppings***. Recommend to try our ___Veggie___ ***Pizza***. \\n **by UCG Team**\",\n                                    \"image\": {\n                                        \"url\": \"https://github.com/nitin20212/nak-ucg/blob/master/IBM-ucg-google-integration/IBM-UCG-Logo.png\",\n                                        \"accessibilityText\": \"Image alternate text\"\n                                    },\n                                    \"buttons\": [{\n                                        \"title\": \"Pizza for Dinner\",\n                                       // \"openUrlAction\": {\n                                       //        \"url\": \"https://assistant.google.com/\"\n                                      //    }\n                                    }],\n                                    \"imageDisplayOptions\": \"CROPPED\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            }]\n\n        }\n        break;\n    case \"suggestionChips\":\n        msg.payload = {\n              \"expectUserResponse\": true,\n  \"expectedInputs\": [\n    {\n      \"possibleIntents\": [\n        {\n          \"intent\": \"actions.intent.TEXT\"\n        }\n      ],\n      \"inputPrompt\": {\n        \"richInitialPrompt\": {\n          \"items\": [\n            {\n              \"simpleResponse\": {\n                \"textToSpeech\": m_response // \"These are suggestion chips.\"\n              }\n            }\n          ],\n          \"suggestions\" : suggestions_obj,\n          \"linkOutSuggestion\": { \n            //\"destinationName\": \"Suggestion Link\",\n            //\"url\": \"https://assistant.google.com/\"\n          }\n        }\n      }\n    }\n  ]\n\n        }        \n        break;\n    case \"finalResponse\":    \n       msg.payload = {\n         \"expectUserResponse\": false,\n         \"finalResponse\": {\n            \"richResponse\": {\n               \"items\": [\n                    {\n                       \"simpleResponse\": {\n                       \"textToSpeech\": m_response //\"Good bye\"\n                       }\n                   }\n               ]\n           }\n        }\n       } \n       break;\n    default:  //: \"simpleResponse\":\n        msg.payload = {\n            \"expectUserResponse\": true,\n            \"expectedInputs\": [{\n                \"possibleIntents\": [{\n                    \"intent\": \"actions.intent.TEXT\"\n                }],\n                \"inputPrompt\": {\n                    \"richInitialPrompt\": {\n                        \"items\": [{\n                            \"simpleResponse\": {\n                                \"textToSpeech\": m_response,\n                                \"displayText\": m_response\n                            }\n                        }]\n                    }\n                }\n            }]\n        }\n        break;\n        \n\n}\n\n/**\nif (response_type !== \"richInitialPrompt\") {\nmsg.payload = \n{\n  \"expectUserResponse\": true,\n  \"expectedInputs\": [\n    {\n      \"possibleIntents\": [\n        {\n          \"intent\": \"actions.intent.TEXT\"\n        }\n      ],\n      \"inputPrompt\": {\n      \"richInitialPrompt\": {\n          \"items\": [\n            {\n              \"simpleResponse\": {\n                \"textToSpeech\": m_response,\n                \"displayText\": m_response\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n}\nelse {\n  msg.payload = \n{\n  \"expectUserResponse\": false,\n  \"expectedInputs\": [\n    {\n      \"possibleIntents\": [\n        {\n          \"intent\": \"actions.intent.TEXT\"\n        }\n      ],\n      \"inputPrompt\": {\n      \"richInitialPrompt\": {\n          \"items\": [\n            {\n              \"finalResponse\": {\n                \"textToSpeech\": m_response,\n                \"displayText\": m_response\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n}\n**/\n//node.error(msg);\n\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":400,"wires":[["71035c9d.44ba04","6653ff24.534a"]]},{"id":"71035c9d.44ba04","type":"debug","z":"66a44aa8.3d97f4","name":"GFD-Response","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":740,"y":300,"wires":[]},{"id":"f89a45a1.2e44d8","type":"function","z":"66a44aa8.3d97f4","name":"Google flow - SDK","func":"node.error(msg);\nconst g_apiai = context.global.apiai;\n\n//msg.sessionId = \"ABwppHGnS6EpRmUchX14N9iq433VhdhpIbu7wlBVxULgvkbEazRzfiXvYFtMMTb7izpYPogn_yW3xkB_k2dctFmw\";\n//msg.user_utterance = \"Hello\";\n\n//var app = g_apiai(\"39911804021741f08646a1b90bd2afaf\");    // Pizza Order\nvar app = g_apiai(\"664490cadaf74ecaae0c6c02399e68cb\");  // Insurance Agent\n\nvar options = {\n    sessionId: \"nak\"+msg.sessionId //,\n    /*contexts: [{}]\n    \n        {\n            name: 'order_pizza_dialog_context',\n            parameters: {\n                'pizza_topping' : 'onions',\n                'size' : 'large',\n                'time' : '9:30'\n            }\n        } \n] */\n};\n\n\n//var request = app.textRequest('Hello', {\n//    sessionId: '1234567'\n//});\n\nvar user_utterance = msg.user_utterance;\n\nvar request = app.textRequest(user_utterance, options);\n\nrequest.on('response', function(response) {\n    \n    msg.payload = response;\n    //node.warn(msg);\n    node.send(msg);\n});\n\nrequest.on('error', function(error) {\n   // msg.payload = error;\n    node.error(msg);\n});\n\nrequest.end();\n\n\n//return msg;","outputs":1,"noerr":0,"x":270,"y":340,"wires":[["4700979d.ec9408","590a62b4.a2a43c"]]},{"id":"4700979d.ec9408","type":"debug","z":"66a44aa8.3d97f4","name":"gfd_out","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":480,"y":300,"wires":[]},{"id":"c63942f3.8164e","type":"function","z":"66a44aa8.3d97f4","name":"Save MSG","func":"//msg.save_msg = {};\n//msg.save_msg.req = msg.req;\n//msg.save_msg.res = msg.res;\n//delete msg.req;\n//delete msg.res;\n\n\nvar str = msg.payload.inputs[0].rawInputs[0].query;\nvar str_up = str.toUpperCase();\n\nvar str_found = str_up.match(/IBM UCG/g);\nmsg.user_utterance = str;\n\nif (str_up.match(/IBM UCG/g) ) {\n    msg.user_utterance = \"Hello\";\n}\nif (str_up.match(/TEST UCG/g) ) {\n    msg.user_utterance = \"Hello\";\n}\nmsg.sessionId = msg.payload.conversation.conversationId;\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":240,"wires":[["f89a45a1.2e44d8"]]},{"id":"897c8811.00bf18","type":"http in","z":"66a44aa8.3d97f4","name":"NAKUCG","url":"/nakucg-mybackup","method":"post","upload":false,"swaggerDoc":"","x":160,"y":160,"wires":[["734ef678.a2e738","c63942f3.8164e"]]},{"id":"734ef678.a2e738","type":"debug","z":"66a44aa8.3d97f4","name":"Channel Input","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":440,"y":160,"wires":[]},{"id":"cc7efe52.a1e83","type":"http response","z":"1b3c25ef.d67532","name":"lpsdk response","statusCode":"200","headers":{},"x":580,"y":180,"wires":[]},{"id":"ef0cde3.9cf7c2","type":"function","z":"1b3c25ef.d67532","name":"create response","func":"msg.payload = [{\"text\": \"got it\"}];\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":180,"wires":[["cc7efe52.a1e83"]]},{"id":"5b806c57.be1714","type":"http in","z":"1b3c25ef.d67532","name":"","url":"/lpsdk-on-hold","method":"post","upload":false,"swaggerDoc":"","x":200,"y":320,"wires":[["1cb4b03b.8de9e","571afc24.56587c"]]},{"id":"1cb4b03b.8de9e","type":"debug","z":"1b3c25ef.d67532","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":410,"y":320,"wires":[]},{"id":"571afc24.56587c","type":"function","z":"1b3c25ef.d67532","name":"Save MSG","func":"//msg.save_msg = {};\n//msg.save_msg.req = msg.req;\n//msg.save_msg.res = msg.res;\n//delete msg.req;\n//delete msg.res;\n\n/**\nvar str = msg.payload.inputs[0].rawInputs[0].query;\nvar str_up = str.toUpperCase();\n\nvar str_found = str_up.match(/IBM UCG/g);\nmsg.user_utterance = str;\n\nif (str_up.match(/IBM UCG/g) ) {\n    msg.user_utterance = \"Hello\";\n}\nif (str_up.match(/TEST UCG/g) ) {\n    msg.user_utterance = \"Hello\";\n}\n*/\nmsg.utterance = msg.payload;\nif (typeof msg.payload.event !== 'undefined') {\n   msg.user_utterance = msg.payload.event.message;\n   msg.sessionId = \"12345567890\";  //msg.payload.event.conversationId;\n}\nelse\n{\n    msg.user_utterance = msg.payload.utterance;\n    msg.sessionId = \"12345567890\"; //msg.dialogId ;\n}\n//msg.user_utterance = \"Hello\";\nreturn msg;","outputs":1,"noerr":0,"x":350,"y":400,"wires":[["aa29cb36.404e5"]]},{"id":"32aacf01.1626a8","type":"function","z":"1b3c25ef.d67532","name":"create response","func":"var obj_response = msg.payload.result.fulfillment.speech.split(\"|\");\n//m_response = obj_response[obj_response.length-1];\n\nif (typeof msg.payload.event !== 'undefined') {\n    msg.payload = [{\"text\" : obj_response[obj_response.length-1]}];\n}\nelse {\n    msg.payload = obj_response[obj_response.length-1];\n}\nreturn msg;","outputs":1,"noerr":0,"x":620,"y":400,"wires":[["33649bee.b3ed2c","f48bbd76.0345b"]]},{"id":"f48bbd76.0345b","type":"http response","z":"1b3c25ef.d67532","name":"lpsdk response","statusCode":"200","headers":{},"x":820,"y":360,"wires":[]},{"id":"77d57e6e.587168","type":"debug","z":"1b3c25ef.d67532","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.result.fulfillment.speech","targetType":"msg","x":770,"y":500,"wires":[]},{"id":"33649bee.b3ed2c","type":"debug","z":"1b3c25ef.d67532","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":810,"y":440,"wires":[]},{"id":"74fe25f5.5e09fc","type":"inject","z":"1b3c25ef.d67532","name":"","topic":"","payload":"Hi","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":460,"wires":[["571afc24.56587c"]]},{"id":"17de31a9.cdc306","type":"function","z":"670b7540.c94404","name":"Save payload","func":"msg.savePayload = msg.payload\n\n//msg.payload = [msg.user]\n\nreturn msg;","outputs":1,"noerr":0,"x":170.20188903808594,"y":73.05198097229004,"wires":[["3a35bd4c.e12d32"]]},{"id":"351b70a7.f98e38","type":"function","z":"670b7540.c94404","name":"Set Session","func":"if (typeof msg.payload.convoUser !== \"undefined\" )\n  {msg.session = msg.payload\n  \n  }\nelse \n  { \n      \n}\n   \n//reset payload from channel to continue flow\nmsg.payload = msg.savePayload\nreturn msg;","outputs":1,"noerr":0,"x":657.7659225463867,"y":73.88070869445801,"wires":[[]]},{"id":"3e9b8fc9.c27c18","type":"json","z":"670b7540.c94404","name":"","pretty":false,"x":500.9051742553711,"y":74.14072799682617,"wires":[["351b70a7.f98e38"]]},{"id":"3a35bd4c.e12d32","type":"function","z":"670b7540.c94404","name":"Redis GET","func":"var redis = global.get('redis');\nvar options = {enable_offline_queue:false};\n\nvar redisClient = global.get(\"redisClient\");\n\nif (typeof redisClient == \"undefined\") {\n  redisClient = new redis('redis://admin:XFRLCLICWCFQXPXA@sl-us-south-1-portal.5.dblayer.com:35110',options);\n// redisClient = new redis('redis://admin:IVKPWZBPOAJYQCRR@bluemix-sandbox-dal-9-portal.7.dblayer.com:27247',options);\n  global.set(\"redisClient\",redisClient);\n  node.log(\"New RedisClient connection in GetSession\")\n}\n\nredisClient.on(\"error\", function (err) {\n    node.error(\"Error \" + err);\n//    client.disconnect(); \n});\n\n redisClient.get(msg.user,function (err,result) {\n  if (err) \n      node.error(\"Error \" + err);\n    else {\n      msg.payload = result;\n      if (msg.payload === null){\n          msg.payload = \"{}\";}\n//      node.log(\"payload \" + JSON.stringify(msg.payload))\n      node.send(msg);\n    }\n//  client.disconnect();\n});\n\n","outputs":1,"noerr":0,"x":346.5,"y":74,"wires":[["3e9b8fc9.c27c18"]]},{"id":"a02855a3.799af8","type":"subflow:670b7540.c94404","z":"1b3c25ef.d67532","name":"","env":[],"x":410,"y":640,"wires":[["6d0b0c14.95259c"]]},{"id":"5126377f.593aa8","type":"function","z":"1b3c25ef.d67532","name":"Get User","func":"msg.user =  \"nak\";  \n\nreturn msg;","outputs":1,"noerr":0,"x":240,"y":640,"wires":[["a02855a3.799af8"]]},{"id":"6d0b0c14.95259c","type":"function","z":"1b3c25ef.d67532","name":"Set Params","func":"msg.source = \"LivePerson\"\nvar workspace_id = msg.req.query.workspace_id\nvar wcs_user_name = msg.req.query.wcs_username\nvar wcs_password = msg.req.query.wcs_password\n\n// Uncomment when New param is added to all front-ends and delete the default\n//var region = msg.req.query.primary_region\nmsg.region = \"US-SOUTH\";\n//Passed params are the primary config, will be used in the dynamic WCS router subflow to switch back\nmsg.primary_workspace_id = workspace_id;\nmsg.primary_wcs_user_name = wcs_user_name;\nmsg.primary_wcs_password = wcs_password;\nmsg.primary_region = msg.region;\n\nvar fname = msg.req.query.fname\n\n//create a null context and test for session existance\nvar context = {}\n\nif (typeof msg.session !== \"undefined\") \n   {context = msg.session.convoPayload.context\n    wcs_user_name = msg.session.wcs_user_name\n    wcs_password  = msg.session.wcs_password\n    workspace_id  = msg.session.workspace_id \n   }\n \nvar newmsg = msg.req.query.text\nnewmsg = newmsg.replace(/'/g, \"\");  \n\nvar map = JSON.parse(\"{}\");\nvar image = JSON.parse(\"{}\");  \nvar button = JSON.parse(\"{}\");\n\nmsg.payload = newmsg\n\ncontext.fname = fname;\ncontext.map = map;\ncontext.image = image;\ncontext.button = button;\ncontext.source = msg.source\n\nvar params = {\n    context: context,\n    workspace_id : workspace_id,\n    username : wcs_user_name,\n    password : wcs_password\n};\n\n// node.log(\"User *** \" + msg.user + \" Said *** \" + newmsg)\n\nmsg.payload = newmsg\nmsg.params = params\n\nreturn msg\n","outputs":1,"noerr":0,"x":591.2499771118164,"y":640.6250009536743,"wires":[["9476b4cf.458d18"]]},{"id":"c6b8a967.67033","type":"inject","z":"1b3c25ef.d67532","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":100,"y":640,"wires":[["5126377f.593aa8"]]},{"id":"9476b4cf.458d18","type":"debug","z":"1b3c25ef.d67532","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":760,"y":640,"wires":[]},{"id":"b585c97.91d13b8","type":"inject","z":"1b3c25ef.d67532","name":"","topic":"","payload":"can i have pizza for dinner","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":540,"wires":[["571afc24.56587c"]]},{"id":"aa29cb36.404e5","type":"function","z":"1b3c25ef.d67532","name":"Google flow - SDK","func":"//node.error(msg);\nconst g_apiai = context.global.apiai;\n\n//msg.sessionId = \"ABwppHGnS6EpRmUchX14N9iq433VhdhpIbu7wlBVxULgvkbEazRzfiXvYFtMMTb7izpYPogn_yW3xkB_k2dctFmw\";\n//msg.user_utterance = \"Hello\";\n\nvar app = g_apiai(\"39911804021741f08646a1b90bd2afaf\");    // Pizza Order\n//var app = g_apiai(\"664490cadaf74ecaae0c6c02399e68cb\");  // Insurance Agent\n\nvar options = {\n    sessionId: \"nak\"+msg.sessionId //,\n    /*contexts: [{}]\n    \n        {\n            name: 'order_pizza_dialog_context',\n            parameters: {\n                'pizza_topping' : 'onions',\n                'size' : 'large',\n                'time' : '9:30'\n            }\n        } \n] */\n};\n\n\n//var request = app.textRequest('Hello', {\n//    sessionId: '1234567'\n//});\n\nvar user_utterance = msg.user_utterance;\n\nvar request = app.textRequest(user_utterance, options);\n\nrequest.on('response', function(response) {\n    \n    msg.payload = response;\n    //node.warn(msg);\n    node.send(msg);\n});\n\nrequest.on('error', function(error) {\n   // msg.payload = error;\n    node.error(msg);\n});\n\nrequest.end();\n\n\n//return msg;","outputs":1,"noerr":0,"x":470,"y":460,"wires":[["32aacf01.1626a8","77d57e6e.587168"]]},{"id":"223b81eb.032076","type":"function","z":"62b32cde.690244","name":"Find Workspace","func":"\nif (msg.payload.trim().toUpperCase().substring(0,6) == \"ASK ME\"){\n    msg.params.workspace_id = \"54141f49-ffa2-4f6b-887c-aac6aea5d42d\";\n    msg.params.username = \"4acac659-e820-4ef6-8421-e88f517c9c4c\";\n    msg.params.password = \"k0gYo1FjJymP\";\n}\n//msg.payload = msg.payload.replace(/\\s+$/g,'')\nif ((msg.payload.toUpperCase().substring(0,5) == \"HELLO\") && (msg.payload.length > 5)){\n\n msg.testHello = msg.payload.toUpperCase().match(/\\b(BANK|INSURE|CALL CENTER|MONEY|HEALTH|METLIFE|FIDELITY|REGIONS|REGIONS TEST|LIBERTY|QUICKEN)\\b/g);\n if (msg.testHello !== null)\n   {msg.testHello = msg.testHello[0]}\n switch(msg.testHello) {\n    case 'BANK':\n        msg.params.workspace_id = \"d13cc96b-a323-43a1-b484-29d37679ac27\";\n        msg.params.username = \"4acac659-e820-4ef6-8421-e88f517c9c4c\";\n        msg.params.password = \"k0gYo1FjJymP\";\n        break;\n    case 'INSURE':\n        msg.params.workspace_id = \"54141f49-ffa2-4f6b-887c-aac6aea5d42d\";\n        msg.params.username = \"4acac659-e820-4ef6-8421-e88f517c9c4c\";\n        msg.params.password = \"k0gYo1FjJymP\";\n        break;\n    case 'CALL CENTER':\n        msg.params.workspace_id = \"faf6e421-43ae-474a-8f9e-e8e10e71e3df\";\n        msg.params.username = \"4acac659-e820-4ef6-8421-e88f517c9c4c\";\n        msg.params.password = \"k0gYo1FjJymP\";\n        break;\n    case 'MONEY':\n        msg.params.workspace_id = \"c2777aef-fe89-4df5-8792-46880d6a0662\";\n        msg.params.username = \"4acac659-e820-4ef6-8421-e88f517c9c4c\";\n        msg.params.password = \"k0gYo1FjJymP\";\n        break;\n    case 'HEALTH':\n        msg.params.workspace_id = \"17727c7a-6339-4bb8-a967-ccd8b12eed76\";\n        msg.params.username = \"e78c76ea-d8aa-4ed6-9fec-292455f3eb17\";\n        msg.params.password = \"UHJz4sZqu5Vq\";\n        break;    \n    case 'QUICKEN':\n        msg.params.workspace_id = \"20918e28-1c00-4611-8e88-60642ea77ebc\";\n        msg.params.username = \"0b41c42f-545b-4bb0-92a8-1824844b4e33\";\n        msg.params.password = \"S6zRVMYapwPy\";\n        break;    \n    case 'METLIFE':\n        msg.params.workspace_id = \"5fd7c1c7-9ea2-4fc8-b6fa-7920e10aad5a\";\n        msg.params.username = \"7d18e2e6-310b-4efc-9370-d9a8289e17dd\";\n        msg.params.password = \"UEVfKB4CLIyF\";\n        break;\n    case 'FIDELITY':\n        msg.params.workspace_id = \"1555159e-fa59-4d8d-bfba-b10a19144e22\";\n        msg.params.username = \"4acac659-e820-4ef6-8421-e88f517c9c4c\";\n        msg.params.password = \"k0gYo1FjJymP\";\n        break;\n     case 'REGIONS':\n        msg.params.workspace_id = \"321e996d-efee-42a0-8aed-3dc93006a026\";\n        msg.params.username = \"f40d2d94-d2e7-4dd1-a718-b57d93203aaa\";\n        msg.params.password = \"cYuHIo2dCmwf\";\n        break;\n     case 'REGIONS TEST':\n        msg.params.workspace_id = \"de1089d8-46e6-4a7d-b5ed-03c5338b7b0a\";\n        msg.params.username = \"271cc33b-4cf3-480c-8798-f4b3e980df00\";\n        msg.params.password = \"BlnizADsfAh8\";\n        break;\n    case 'LIBERTY':\n        msg.params.workspace_id = \"893ec9b6-bfc8-426a-8fd1-592a2e6ebaa8\";\n        msg.params.username = \"6c6eb782-c2ea-4b14-8912-072ac57eee3a\";\n        msg.params.password = \"Au5euZDUZBvO\";\n        break;\n    default: \n }\n}\n// check for date and compute age context vars\nif (msg.payload.lastIndexOf('/') >= 0 ) {\n     var myindex = msg.payload.lastIndexOf('/')\n     var dateString = msg.payload\n     \n     var d = new Date(dateString)\n     var now = new Date()\n     var years = now.getFullYear() - d.getFullYear()\n\n     d.setFullYear(d.getFullYear() + years)\n     var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000.00)\n     var age = years + days /365\n    \n     msg.params.context.age = Math.round(age *100)/100\n \n     var d = new Date(dateString)\n     var now = new Date()\n     now.setMonth(\"12\")\n     now.setDate(\"31\")\n     var years = now.getFullYear() - d.getFullYear()\n     d.setFullYear(d.getFullYear() + years)\n     var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000.00)\n     var ageEOY = years + days /365\n     msg.params.context.ageEOY = Math.round(ageEOY * 100)/100\n     \n     var d = new Date(dateString)\n     var now = new Date()\n     now.setMonth(\"01\")\n     now.setDate(\"01\")\n     var years = now.getFullYear() - d.getFullYear()\n     d.setFullYear(d.getFullYear() + years)\n     var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000.00)\n     var ageBOY = years + days /365\n     msg.params.context.ageBOY = Math.round(ageBOY * 100)/100\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":200,"y":60,"wires":[[]]},{"id":"8329aacf.bf9178","type":"function","z":"1b3c25ef.d67532","name":"Set Params for WCS Call","func":"msg.source = \"LivePerson\"\nmsg.region = \"US-SOUTH\";\n//Passed params are the primary config, will be used in the dynamic WCS router subflow to switch back\nmsg.primary_region = msg.region;\n\n\n\nvar workspace_id = global.get(\"global_workspace\"); //\"755b62ba-ce44-4ecf-ad18-432be1be8c8c\";\nvar wcs_user_name = global.get(\"global_conv_usr\"); //\"3461c175-52b5-4c38-b1be-e9f3d458a701\"; // \"4acac659-e820-4ef6-8421-e88f517c9c4c\";\nvar wcs_password = global.get(\"global_conv_pass\"); //\"UplCjXHkuLgj\";\n\n\nvar m_global_timezone = global.get(\"global_timezone\");\nvar m_global_watson_timeOut = global.get(\"global_watson_timeOut\");\nvar m_global_conv_url = global.get(\"global_conv_url\");\n\n\nvar fname = \"NitinK\"; //msg.req.query.fname\n\n//create a null context and test for session existance\nvar context_obj = {};\nmsg.session = {};\nvar user_glob_Context = \"Save_Context_\" + msg.save_payload.dialogId;\nif (typeof global.get('\"'+user_glob_Context+'\"') !== 'undefined') {\n    context_obj = global.get('\"'+user_glob_Context+'\"');\n    node.error(\"Display Context\");\n    node.error(context_obj);\n}\n\n\n\nvar newmsg = msg.payload.utterance;  //msg.req.query.text\nnewmsg = newmsg.replace(/'/g, \"\");  \n\nvar map = JSON.parse(\"{}\");\nvar image = JSON.parse(\"{}\");  \nvar button = JSON.parse(\"{}\");\n\nmsg.payload = newmsg\n\ncontext_obj.fname = fname;\ncontext_obj.map = map;\ncontext_obj.image = image;\ncontext_obj.button = button;\ncontext_obj.source = msg.source\n\nmsg.params = {};\nmsg.params.context = context_obj;\nmsg.params.workspace_id = workspace_id;\nmsg.params.username = wcs_user_name;\nmsg.params.password = wcs_password;\n//node.error(\"before display\");\n//node.error(msg);\n//node.error(\"After display\");\n\nmsg.payload = newmsg\n//msg.params = params\nnode.error(msg);\nreturn msg\n","outputs":1,"noerr":0,"x":350,"y":1200,"wires":[["7d4308a6.cf13f"]]},{"id":"6c805e56.0b5b2","type":"subflow:62b32cde.690244","z":"1b3c25ef.d67532","name":"","env":[],"x":540,"y":700,"wires":[[]]},{"id":"7d4308a6.cf13f","type":"function","z":"1b3c25ef.d67532","name":"Call WCS to get Answer","func":"/* New param to added to all front-ends - wcs_region = USSOUTH, GERMANY\nWill be used to set the url\nUSSOUTH - https://gateway.watsonplatform.net/conversation/api\nGERMANY - https://gateway-fra.watsonplatform.net/conversation/api\n*/\nmsg.region = \"US-SOUTH\";\nvar watson = global.get('watson');\nmsg.params.input = {\n      text: msg.payload\n    };\n\nif (msg.region === \"US-SOUTH\"){ \n    msg.params.endpoint = \"https://gateway.watsonplatform.net/conversation/api\"\n}\nelse if (msg.region === \"GERMANY\"){\n    msg.params.endpoint = \"https://gateway-fra.watsonplatform.net/conversation/api\"\n}\n\nvar conversation = new watson.ConversationV1({\n//var conversation = new watson({\n  username : msg.params.username,\n  password : msg.params.password,\n  workspace_id : msg.params.workspace_id,\n  url : msg.params.endpoint,\n  version_date: '2017-05-26'\n});\n\nvar myTM = setTimeout(function() { node.error(\"WCS message API reached 15 second time out\", msg)}, 15000 );\n\nconversation.message(msg.params,function(err, response) {\n    if (err) {\n      node.error(err);\n    } else {\n      msg.payload = response;\n      node.send(msg);\n      clearTimeout(myTM)\n     // console.log(JSON.stringify(response, null, 2));\n    }\n  }\n);\n","outputs":1,"noerr":0,"x":630,"y":1200,"wires":[["9665ee08.e852","9307de30.190bf"]]},{"id":"6bb9bcd.817b7c4","type":"inject","z":"1b3c25ef.d67532","name":"Hello","topic":"","payload":"{\"dialogId\":\"35c3e92f-ad53-42bd-81ef-bf9fe3313e82\",\"utterance\":\"Hello\"}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":130,"y":1060,"wires":[["e06cd7cd.df929"]]},{"id":"9665ee08.e852","type":"debug","z":"1b3c25ef.d67532","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":730,"y":1260,"wires":[]},{"id":"6ff4b0cc.73a35","type":"function","z":"1b3c25ef.d67532","name":"Get-answer-WA-http-request","func":"//node.error(msg);\n//var m_global_conv_wks =  msg.wcs_setup.cur_wcs_id;  \n\n//var m_token = msg.payload.access_token |\n\nvar now     = new Date(); \nvar time_in_ms = now.getTime();\n//msg.getsession.wcs_start_time = time_in_ms; \n\n//var m_soe_wcs_call_id = Math.floor(10000000 + Math.random() * 80000000);\n//global.set(\"soe_wcs_call_id_http_token\",m_soe_wcs_call_id.toString());\n//global.set(\"wcs_retry_http_token\",0);\n//msg.params.context.soe_wcs_call_id = m_soe_wcs_call_id.toString();\n\n\nvar m_token = global.get(\"wa_access_token\"); \n\nvar m_global_conv_usr = global.get(\"global_conv_usr\");\nvar m_global_conv_pass = global.get(\"global_conv_pass\");\nvar m_global_timezone = global.get(\"global_timezone\");\n//var m_global_watson_timeOut = global.get(\"global_watson_timeOut\");\n//var m_global_conv_url = global.get(\"global_conv_url\");\n\nvar m_workspace =  global.get(\"global_workspace\"); //'bf9900bd-41f5-4e38-9b65-f928cd50e8d8'; //msg.wcs_setup.cur_wcs_id; //\"b7c8b08b-6045-42ae-922b-37164734e80b\";\n//msg.curr_time = msg.payload;\n//msg.params = {context : {}};\nvar m_context = msg.params.context;\n//delete msg.params;\nm_input = \"Hello\";\n \n\nmsg.headers={\"Content-Type\":\"application/json\",\n             \"Accept\" : \"application/json\",\n             \"Authorization\": \"Basic MzQ2MWMxNzUtNTJiNS00YzM4LWIxYmUtZTlmM2Q0NThhNzAxOlVwbENqWEhrdUxnag==\",\n             //\"Authorization\" : \"Bearer \" + m_token,\n    \"write-out\" : {\n     \"lookup\": \"%{time_namelookup}\",\n     \"nconnect\" : \"%{time_connect}\",\n     \"nappconnect\": \"%{time_appconnect}\",\n     \"npretransfer\": \"%{time_pretransfer}\",\n     \"nredirect\": \"%{time_redirect}\",\n     \"nstarttransfer\": \"%{time_starttransfer}\",\n     \"ntotal\": \"%{time_total}\",\n     \"socket-timeout\" : (global.get(\"global_watson_timeOut\") * 4),\n    }\n    \n};\nmsg.url = \"https://gateway.watsonplatform.net/assistant/api/v1/workspaces/\"+ m_workspace + \"/message?version=2018-09-20\"; //global.get(\"global_conv_url\");  \nmsg.method = \"POST\";\nmsg.payload = {\n    \"input\" : {\"text\" : m_input},\n    \"context\" : m_context\n\n};\n\nmsg.requestTimeout = \"60000\"; //global.get(\"global_watson_timeOut\") ;\n//var now     = new Date(); \n// m_atpoint_Time = context.global.get_date_string();\n//var time_in_ms = now.getTime();\n\n//msg.getsession = {wcs_start_time : time_in_ms}; \n\n//node.error(msg);\nreturn msg;","outputs":1,"noerr":0,"x":740,"y":780,"wires":[["13fefe58.0166c2"]]},{"id":"13fefe58.0166c2","type":"http request","z":"1b3c25ef.d67532","name":"","method":"use","ret":"obj","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":690,"y":840,"wires":[[]]},{"id":"e06cd7cd.df929","type":"function","z":"1b3c25ef.d67532","name":"Restore Context  and set global variables","func":"msg.save_payload = msg.payload;\nvar user_glob_Context = \"Save_Context_\" + msg.save_payload.dialogId;\nvar user_glob_wcs_setup = \"Save_wcs_setup_\" + msg.save_payload.dialogId;\nvar user_glob_Context_time = \"Save_Context_time_\" + msg.save_payload.dialogId;\n\nvar cur_dt = new Date();\nvar cur_time = cur_dt.getTime();\n\nif (typeof global.get('\"'+user_glob_Context_time+'\"') !== 'undefined') {\n    var m_time_elapsed = cur_time - global.get('\"'+user_glob_Context_time+'\"');\n    var str = msg.payload.utterance.toUpperCase();\n    var n_found = str.search(\"HELLO\");\n    //node.error(\"checking to initialize var -\"+ n_found);\n    if ((m_time_elapsed > 600000) || (n_found > 0))  {\n       // node.error(\"inside initialize var -\"+ n_found);\n        var m1 = undefined;\n        global.set('\"'+user_glob_Context+'\"',m1);\n        global.set('\"'+user_glob_wcs_setup+'\"',m1);\n        global.set('\"'+user_glob_Context_time+'\"',m1);\n        node.error(\"Cleared old Context variables\");\n    }\n}\n//node.error(msg);\nglobal.set(\"global_workspace\",\"755b62ba-ce44-4ecf-ad18-432be1be8c8c\");\nglobal.set(\"global_conv_usr\",\"3461c175-52b5-4c38-b1be-e9f3d458a701\");\nglobal.set(\"global_conv_pass\",\"UplCjXHkuLgj\");\n\n\nreturn msg;","outputs":1,"noerr":0,"x":380,"y":1120,"wires":[["8329aacf.bf9178"]]},{"id":"9307de30.190bf","type":"function","z":"1b3c25ef.d67532","name":"Check Response and save session data","func":"var user_glob_Context_time = \"Save_Context_time_\" + msg.save_payload.dialogId;\nvar cur_dt = new Date();\nvar cur_time = cur_dt.getTime();\n\nvar user_glob_Context = \"Save_Context_\" + msg.save_payload.dialogId;\nglobal.set('\"'+user_glob_Context+'\"',msg.payload.context);\nglobal.set('\"'+user_glob_Context_time+'\"',cur_time);\n\nnode.error(msg);\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":1260,"wires":[["55fd8133.d1955"]]},{"id":"d83e9d34.f9fc38","type":"inject","z":"1b3c25ef.d67532","name":"2nd utterance","topic":"","payload":"{\"dialogId\":\"35c3e92f-ad53-42bd-81ef-bf9fe3313e82\",\"utterance\":\"Open bank account\"}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":1120,"wires":[["e06cd7cd.df929"]]},{"id":"d1ade76a.6c39c","type":"http in","z":"1b3c25ef.d67532","name":"","url":"/lpsdk","method":"post","upload":false,"swaggerDoc":"","x":90,"y":1220,"wires":[["e06cd7cd.df929"]]},{"id":"55fd8133.d1955","type":"function","z":"1b3c25ef.d67532","name":"create response","func":"//var obj_response = msg.payload.result.fulfillment.speech.split(\"|\");\n//m_response = obj_response[obj_response.length-1];\n\nif (typeof msg.payload.event !== 'undefined') {\n    msg.payload = [{\"text\" : msg.payload.output.text[0]}]; \n}\nelse {\n    msg.payload = msg.payload.output.text[0];\n    //obj_response[obj_response.length-1];\n}\nreturn msg;","outputs":1,"noerr":0,"x":360,"y":1340,"wires":[["f0d90b46.0b1b5","280af924.43808e"]]},{"id":"f0d90b46.0b1b5","type":"debug","z":"1b3c25ef.d67532","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":530,"y":1400,"wires":[]},{"id":"280af924.43808e","type":"http response","z":"1b3c25ef.d67532","name":"lpsdk response","statusCode":"200","headers":{},"x":600,"y":1340,"wires":[]}]